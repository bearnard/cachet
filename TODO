Cache should assume an interface
Interface-ify anything that I mock
Audit use of one for allowing
Extract traits where appropriate
Learn . vs ' ' method invocation convention
unify mustBe true / must beTrue / etc.

CacheEntry Implement isCachable -- HTTP 200, etc.
The various DateHeader/IntHeaders in CacheEntry are vulnerable to header fragmentation

ResponseTime stuff is weird

Locking / Grace Period - prevent dog pile by locking around fetch.

Strategy is injected into CacheProxy:
  - compute cacheable request?
  - compute cache key
	- compute fresh
	- compute valid
	- compute hash

	- transform on receive (before going to cache or backend)
	- transform on hit (before sending to user)
	- transform on miss (before going to backend)
	- transform on fetch (transform before store)
	- transform on deliver (before sending to user)

Implement validation schemes:
  last-modified
  etag

== Maybe ==

. Validation Servlet


== Notes ==



